/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.6 at Fri Jun 10 15:10:20 2022. */

#ifndef PB_WEAR_WEATHER_PB_H_INCLUDED
#define PB_WEAR_WEATHER_PB_H_INCLUDED
#include <pb.h>

#include "wear_common.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Weather_WeatherID
{
    Weather_WeatherID_LATEST_WEATHER = 0,
    Weather_WeatherID_DAILY_FORECAST = 1,
    Weather_WeatherID_HOURLY_FORECAST = 2,
    Weather_WeatherID_WEAR_REQUEST = 3,
    Weather_WeatherID_SET_PRESSURE = 4,
    Weather_WeatherID_GET_CITY_KEYS = 5,
    Weather_WeatherID_UPDATE_CITY_KEYS = 6,
    Weather_WeatherID_ADD_CITY_KEY = 7,
    Weather_WeatherID_REMOVE_CITY_KEYS = 8,
    Weather_WeatherID_GET_CONFIG = 9,
    Weather_WeatherID_SET_CONFIG = 10
} Weather_WeatherID;
#define _Weather_WeatherID_MIN Weather_WeatherID_LATEST_WEATHER
#define _Weather_WeatherID_MAX Weather_WeatherID_SET_CONFIG
#define _Weather_WeatherID_ARRAYSIZE ((Weather_WeatherID)(Weather_WeatherID_SET_CONFIG+1))

/* Struct definitions */
typedef struct _Alerts
{
    char *type;
    char *level;
    char *title;
    char *detail;
    /* @@protoc_insertion_point(struct:Alerts) */
} Alerts;

typedef struct _Alerts_List
{
    pb_size_t list_count;
    struct _Alerts *list;
    /* @@protoc_insertion_point(struct:Alerts_List) */
} Alerts_List;

typedef struct _CityKey
{
    char *location_key;
    char *city_name;
    /* @@protoc_insertion_point(struct:CityKey) */
} CityKey;

typedef struct _CityKey_List
{
    pb_size_t list_count;
    struct _CityKey *list;
    /* @@protoc_insertion_point(struct:CityKey_List) */
} CityKey_List;

typedef struct _SunRiseSet
{
    char *sun_rise;
    char *sun_set;
    /* @@protoc_insertion_point(struct:SunRiseSet) */
} SunRiseSet;

typedef struct _WeatherForecast_Data_List
{
    pb_size_t list_count;
    struct _WeatherForecast_Data *list;
    /* @@protoc_insertion_point(struct:WeatherForecast_Data_List) */
} WeatherForecast_Data_List;

typedef struct _WeatherConfig
{
    bool has_temperature_unit;
    TemperatureUnit temperature_unit;
    bool has_alert;
    OptionalSwitcher alert;
    /* @@protoc_insertion_point(struct:WeatherConfig) */
} WeatherConfig;

typedef struct _WeatherForecast_Data
{
    KeyValue aqi;
    bool has_weather;
    RangeValue weather;
    bool has_temperature;
    RangeValue temperature;
    char *temperature_unit;
    bool has_sun_rise_set;
    SunRiseSet sun_rise_set;
    /* @@protoc_insertion_point(struct:WeatherForecast_Data) */
} WeatherForecast_Data;

typedef struct _WeatherId
{
    char *pub_time;
    char *city_name;
    char *location_name;
    char *location_key;
    bool has_is_current_location;
    bool is_current_location;
    /* @@protoc_insertion_point(struct:WeatherId) */
} WeatherId;

typedef struct _WeatherForecast
{
    WeatherId id;
    WeatherForecast_Data_List data_list;
    /* @@protoc_insertion_point(struct:WeatherForecast) */
} WeatherForecast;

typedef struct _WeatherLatest
{
    WeatherId id;
    uint16_t weather;
    KeyValue temperature;
    KeyValue humidity;
    KeyValue wind_info;
    KeyValue uvindex;
    KeyValue aqi;
    Alerts_List alerts_list;
    bool has_pressure;
    float pressure;
    /* @@protoc_insertion_point(struct:WeatherLatest) */
} WeatherLatest;

typedef struct _Weather
{
    pb_size_t which_payload;
    union
    {
        WeatherLatest latest;
        WeatherForecast forecast;
        float pressure;
        CityKey_List city_key_list;
        CityKey city_key;
        WeatherConfig weather_config;
    } payload;
    /* @@protoc_insertion_point(struct:Weather) */
} Weather;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Weather_init_default                     {0, {WeatherLatest_init_default}}
#define CityKey_init_default                     {NULL, NULL}
#define CityKey_List_init_default                {0, NULL}
#define WeatherId_init_default                   {NULL, NULL, NULL, NULL, false, 0}
#define WeatherLatest_init_default               {WeatherId_init_default, 0, KeyValue_init_default, KeyValue_init_default, KeyValue_init_default, KeyValue_init_default, KeyValue_init_default, Alerts_List_init_default, false, 0}
#define WeatherForecast_init_default             {WeatherId_init_default, WeatherForecast_Data_List_init_default}
#define WeatherForecast_Data_init_default        {KeyValue_init_default, false, RangeValue_init_default, false, RangeValue_init_default, NULL, false, SunRiseSet_init_default}
#define WeatherForecast_Data_List_init_default   {0, NULL}
#define Alerts_init_default                      {NULL, NULL, NULL, NULL}
#define Alerts_List_init_default                 {0, NULL}
#define SunRiseSet_init_default                  {NULL, NULL}
#define WeatherConfig_init_default               {false, _TemperatureUnit_MIN, false, _OptionalSwitcher_MIN}
#define Weather_init_zero                        {0, {WeatherLatest_init_zero}}
#define CityKey_init_zero                        {NULL, NULL}
#define CityKey_List_init_zero                   {0, NULL}
#define WeatherId_init_zero                      {NULL, NULL, NULL, NULL, false, 0}
#define WeatherLatest_init_zero                  {WeatherId_init_zero, 0, KeyValue_init_zero, KeyValue_init_zero, KeyValue_init_zero, KeyValue_init_zero, KeyValue_init_zero, Alerts_List_init_zero, false, 0}
#define WeatherForecast_init_zero                {WeatherId_init_zero, WeatherForecast_Data_List_init_zero}
#define WeatherForecast_Data_init_zero           {KeyValue_init_zero, false, RangeValue_init_zero, false, RangeValue_init_zero, NULL, false, SunRiseSet_init_zero}
#define WeatherForecast_Data_List_init_zero      {0, NULL}
#define Alerts_init_zero                         {NULL, NULL, NULL, NULL}
#define Alerts_List_init_zero                    {0, NULL}
#define SunRiseSet_init_zero                     {NULL, NULL}
#define WeatherConfig_init_zero                  {false, _TemperatureUnit_MIN, false, _OptionalSwitcher_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define Alerts_type_tag                          1
#define Alerts_level_tag                         2
#define Alerts_title_tag                         3
#define Alerts_detail_tag                        4
#define Alerts_List_list_tag                     1
#define CityKey_location_key_tag                 1
#define CityKey_city_name_tag                    2
#define CityKey_List_list_tag                    1
#define SunRiseSet_sun_rise_tag                  1
#define SunRiseSet_sun_set_tag                   2
#define WeatherForecast_Data_List_list_tag       1
#define WeatherConfig_temperature_unit_tag       1
#define WeatherConfig_alert_tag                  2
#define WeatherForecast_Data_aqi_tag             1
#define WeatherForecast_Data_weather_tag         2
#define WeatherForecast_Data_temperature_tag     3
#define WeatherForecast_Data_temperature_unit_tag 4
#define WeatherForecast_Data_sun_rise_set_tag    5
#define WeatherId_pub_time_tag                   1
#define WeatherId_city_name_tag                  2
#define WeatherId_location_name_tag              3
#define WeatherId_location_key_tag               4
#define WeatherId_is_current_location_tag        5
#define WeatherForecast_id_tag                   1
#define WeatherForecast_data_list_tag            2
#define WeatherLatest_id_tag                     1
#define WeatherLatest_weather_tag                2
#define WeatherLatest_temperature_tag            3
#define WeatherLatest_humidity_tag               4
#define WeatherLatest_wind_info_tag              5
#define WeatherLatest_uvindex_tag                6
#define WeatherLatest_aqi_tag                    7
#define WeatherLatest_alerts_list_tag            8
#define WeatherLatest_pressure_tag               9
#define Weather_latest_tag                       1
#define Weather_forecast_tag                     2
#define Weather_pressure_tag                     3
#define Weather_city_key_list_tag                4
#define Weather_city_key_tag                     5
#define Weather_weather_config_tag               6

/* Struct field encoding specification for nanopb */
extern const pb_field_t Weather_fields[7];
extern const pb_field_t CityKey_fields[3];
extern const pb_field_t CityKey_List_fields[2];
extern const pb_field_t WeatherId_fields[6];
extern const pb_field_t WeatherLatest_fields[10];
extern const pb_field_t WeatherForecast_fields[3];
extern const pb_field_t WeatherForecast_Data_fields[6];
extern const pb_field_t WeatherForecast_Data_List_fields[2];
extern const pb_field_t Alerts_fields[5];
extern const pb_field_t Alerts_List_fields[2];
extern const pb_field_t SunRiseSet_fields[3];
extern const pb_field_t WeatherConfig_fields[3];

/* Maximum encoded size of messages (where known) */
/* Weather_size depends on runtime parameters */
/* CityKey_size depends on runtime parameters */
/* CityKey_List_size depends on runtime parameters */
/* WeatherId_size depends on runtime parameters */
/* WeatherLatest_size depends on runtime parameters */
/* WeatherForecast_size depends on runtime parameters */
/* WeatherForecast_Data_size depends on runtime parameters */
/* WeatherForecast_Data_List_size depends on runtime parameters */
/* Alerts_size depends on runtime parameters */
/* Alerts_List_size depends on runtime parameters */
/* SunRiseSet_size depends on runtime parameters */
#define WeatherConfig_size                       4

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define WEAR_WEATHER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
