/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.6 at Fri Jun 10 15:10:20 2022. */

#ifndef PB_WEAR_CONTACT_PB_H_INCLUDED
#define PB_WEAR_CONTACT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Contact_ContactID
{
    Contact_ContactID_GET_EMERGENCY_CONTACT = 0,
    Contact_ContactID_SET_EMERGENCY_CONTACT = 1,
    Contact_ContactID_QUERY_CONTACT_INFO = 2,
    Contact_ContactID_SEND_CONTACT_INFO = 3,
    Contact_ContactID_GET_CONTACT_LIST = 4,
    Contact_ContactID_ADD_CONTACT_LIST = 5,
    Contact_ContactID_REMOVE_CONTACT_LIST = 6,
    Contact_ContactID_SYNC_CONTACT_LIST = 7
} Contact_ContactID;
#define _Contact_ContactID_MIN Contact_ContactID_GET_EMERGENCY_CONTACT
#define _Contact_ContactID_MAX Contact_ContactID_SYNC_CONTACT_LIST
#define _Contact_ContactID_ARRAYSIZE ((Contact_ContactID)(Contact_ContactID_SYNC_CONTACT_LIST+1))

/* Struct definitions */
typedef struct _ContactInfo
{
    char *name;
    char *number;
    /* @@protoc_insertion_point(struct:ContactInfo) */
} ContactInfo;

typedef struct _ContactInfo_List
{
    pb_size_t list_count;
    struct _ContactInfo *list;
    bool has_current_segment;
    uint32_t current_segment;
    bool has_total_segment;
    uint32_t total_segment;
    /* @@protoc_insertion_point(struct:ContactInfo_List) */
} ContactInfo_List;

typedef struct _EmergencyContact
{
    bool enabled;
    bool has_contact_info;
    ContactInfo contact_info;
    /* @@protoc_insertion_point(struct:EmergencyContact) */
} EmergencyContact;

typedef struct _Contact
{
    pb_size_t which_payload;
    union
    {
        EmergencyContact emergency_contact;
        char *number;
        ContactInfo contact_info;
        ContactInfo_List contact_info_list;
    } payload;
    /* @@protoc_insertion_point(struct:Contact) */
} Contact;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Contact_init_default                     {0, {EmergencyContact_init_default}}
#define ContactInfo_init_default                 {NULL, NULL}
#define ContactInfo_List_init_default            {0, NULL, false, 0, false, 0}
#define EmergencyContact_init_default            {0, false, ContactInfo_init_default}
#define Contact_init_zero                        {0, {EmergencyContact_init_zero}}
#define ContactInfo_init_zero                    {NULL, NULL}
#define ContactInfo_List_init_zero               {0, NULL, false, 0, false, 0}
#define EmergencyContact_init_zero               {0, false, ContactInfo_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define ContactInfo_name_tag                     1
#define ContactInfo_number_tag                   2
#define ContactInfo_List_list_tag                1
#define ContactInfo_List_current_segment_tag     2
#define ContactInfo_List_total_segment_tag       3
#define EmergencyContact_enabled_tag             1
#define EmergencyContact_contact_info_tag        2
#define Contact_emergency_contact_tag            1
#define Contact_number_tag                       2
#define Contact_contact_info_tag                 3
#define Contact_contact_info_list_tag            4

/* Struct field encoding specification for nanopb */
extern const pb_field_t Contact_fields[5];
extern const pb_field_t ContactInfo_fields[3];
extern const pb_field_t ContactInfo_List_fields[4];
extern const pb_field_t EmergencyContact_fields[3];

/* Maximum encoded size of messages (where known) */
/* Contact_size depends on runtime parameters */
/* ContactInfo_size depends on runtime parameters */
/* ContactInfo_List_size depends on runtime parameters */
/* EmergencyContact_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define WEAR_CONTACT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
