/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.6 at Fri Jun 10 15:10:20 2022. */

#ifndef PB_WEAR_FACTORY_PB_H_INCLUDED
#define PB_WEAR_FACTORY_PB_H_INCLUDED
#include <pb.h>

#include "wear_common.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _FactoryMode
{
    FactoryMode_USER = 0,
    FactoryMode_USERDEBUG = 1,
    FactoryMode_ENG = 2
} FactoryMode;
#define _FactoryMode_MIN FactoryMode_USER
#define _FactoryMode_MAX FactoryMode_ENG
#define _FactoryMode_ARRAYSIZE ((FactoryMode)(FactoryMode_ENG+1))

typedef enum _Factory_FactoryID
{
    Factory_FactoryID_SET_MODE = 0,
    Factory_FactoryID_CONFIG_NFC = 1,
    Factory_FactoryID_DUMP_FILE = 2,
    Factory_FactoryID_PREVIEW_IMAGE = 3,
    Factory_FactoryID_SENSOR_CAPTURE_REQUEST = 10,
    Factory_FactoryID_SENSOR_CONFIRM_REQUEST = 11,
    Factory_FactoryID_SET_ATTP = 128
} Factory_FactoryID;
#define _Factory_FactoryID_MIN Factory_FactoryID_SET_MODE
#define _Factory_FactoryID_MAX Factory_FactoryID_SET_ATTP
#define _Factory_FactoryID_ARRAYSIZE ((Factory_FactoryID)(Factory_FactoryID_SET_ATTP+1))

typedef enum _SensorCaptureRequest_State
{
    SensorCaptureRequest_State_START_CAPTURE = 1,
    SensorCaptureRequest_State_STOP_CAPTURE = 2,
    SensorCaptureRequest_State_SYNC_CAPTURE = 3,
    SensorCaptureRequest_State_SET_CAPTURE = 4
} SensorCaptureRequest_State;
#define _SensorCaptureRequest_State_MIN SensorCaptureRequest_State_START_CAPTURE
#define _SensorCaptureRequest_State_MAX SensorCaptureRequest_State_SET_CAPTURE
#define _SensorCaptureRequest_State_ARRAYSIZE ((SensorCaptureRequest_State)(SensorCaptureRequest_State_SET_CAPTURE+1))

typedef enum _SensorCaptureRequest_Mode
{
    SensorCaptureRequest_Mode_ONLINE_CAPTURE = 1,
    SensorCaptureRequest_Mode_OFFLINE_CAPTURE = 2,
    SensorCaptureRequest_Mode_REALTIME_CAPTURE = 3
} SensorCaptureRequest_Mode;
#define _SensorCaptureRequest_Mode_MIN SensorCaptureRequest_Mode_ONLINE_CAPTURE
#define _SensorCaptureRequest_Mode_MAX SensorCaptureRequest_Mode_REALTIME_CAPTURE
#define _SensorCaptureRequest_Mode_ARRAYSIZE ((SensorCaptureRequest_Mode)(SensorCaptureRequest_Mode_REALTIME_CAPTURE+1))

/* Struct definitions */
typedef struct _NfcInfo
{
    char *key;
    pb_bytes_array_t *value;
    /* @@protoc_insertion_point(struct:NfcInfo) */
} NfcInfo;

typedef struct _NfcInfo_List
{
    pb_size_t list_count;
    struct _NfcInfo *list;
    /* @@protoc_insertion_point(struct:NfcInfo_List) */
} NfcInfo_List;

typedef struct _PreviewImageRequest
{
    char *id;
    char *name;
    /* @@protoc_insertion_point(struct:PreviewImageRequest) */
} PreviewImageRequest;

typedef struct _SensorCaptureRequest_Sensor_List
{
    pb_size_t list_count;
    struct _SensorCaptureRequest_Sensor *list;
    /* @@protoc_insertion_point(struct:SensorCaptureRequest_Sensor_List) */
} SensorCaptureRequest_Sensor_List;

typedef struct _FileInfo
{
    char *name;
    bool is_append;
    pb_bytes_array_t *data;
    /* @@protoc_insertion_point(struct:FileInfo) */
} FileInfo;

typedef struct _PreviewImageResponse
{
    PrepareStatus status;
    bool has_expected_image_format;
    ImageFormat expected_image_format;
    bool has_expected_slice_length;
    uint32_t expected_slice_length;
    /* @@protoc_insertion_point(struct:PreviewImageResponse) */
} PreviewImageResponse;

typedef struct _SensorCaptureRequest_MetaInfo
{
    char *user_id;
    Sex sex;
    uint8_t user_age;
    uint16_t height;
    float weight;
    char *main_scene;
    char *sub_scene;
    /* @@protoc_insertion_point(struct:SensorCaptureRequest_MetaInfo) */
} SensorCaptureRequest_MetaInfo;

typedef struct _SensorCaptureRequest_Sensor
{
    uint8_t type;
    uint16_t frequence;
    /* @@protoc_insertion_point(struct:SensorCaptureRequest_Sensor) */
} SensorCaptureRequest_Sensor;

typedef struct _SensorCaptureResponse
{
    uint8_t code;
    pb_bytes_array_t *setting_info;
    /* @@protoc_insertion_point(struct:SensorCaptureResponse) */
} SensorCaptureResponse;

typedef struct _SensorConfirmRequest
{
    pb_bytes_array_t *data_id;
    uint8_t status;
    /* @@protoc_insertion_point(struct:SensorConfirmRequest) */
} SensorConfirmRequest;

typedef struct _SensorConfirmResponse
{
    uint8_t result;
    /* @@protoc_insertion_point(struct:SensorConfirmResponse) */
} SensorConfirmResponse;

typedef struct _SensorCaptureRequest
{
    SensorCaptureRequest_State state;
    SensorCaptureRequest_Mode mode;
    bool has_timestamp;
    uint32_t timestamp;
    bool has_meta_info;
    SensorCaptureRequest_MetaInfo meta_info;
    bool has_sensor_list;
    SensorCaptureRequest_Sensor_List sensor_list;
    pb_bytes_array_t *setting_info;
    /* @@protoc_insertion_point(struct:SensorCaptureRequest) */
} SensorCaptureRequest;

typedef struct _Factory
{
    pb_size_t which_payload;
    union
    {
        FactoryMode mode;
        NfcInfo_List nfc_list;
        FileInfo file;
        PreviewImageRequest image_request;
        PreviewImageResponse image_response;
        SensorCaptureRequest sensor_capture_request;
        SensorCaptureResponse sensor_capture_response;
        SensorConfirmRequest sensor_confirm_request;
        SensorConfirmResponse sensor_confirm_response;
        char *attp;
    } payload;
    /* @@protoc_insertion_point(struct:Factory) */
} Factory;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Factory_init_default                     {0, {_FactoryMode_MIN}}
#define NfcInfo_init_default                     {NULL, NULL}
#define NfcInfo_List_init_default                {0, NULL}
#define FileInfo_init_default                    {NULL, 0, NULL}
#define PreviewImageRequest_init_default         {NULL, NULL}
#define PreviewImageResponse_init_default        {_PrepareStatus_MIN, false, _ImageFormat_MIN, false, 0}
#define SensorCaptureRequest_init_default        {_SensorCaptureRequest_State_MIN, _SensorCaptureRequest_Mode_MIN, false, 0, false, SensorCaptureRequest_MetaInfo_init_default, false, SensorCaptureRequest_Sensor_List_init_default, NULL}
#define SensorCaptureRequest_MetaInfo_init_default {NULL, _Sex_MIN, 0, 0, 0, NULL, NULL}
#define SensorCaptureRequest_Sensor_init_default {0, 0}
#define SensorCaptureRequest_Sensor_List_init_default {0, NULL}
#define SensorCaptureResponse_init_default       {0, NULL}
#define SensorConfirmRequest_init_default        {NULL, 0}
#define SensorConfirmResponse_init_default       {0}
#define Factory_init_zero                        {0, {_FactoryMode_MIN}}
#define NfcInfo_init_zero                        {NULL, NULL}
#define NfcInfo_List_init_zero                   {0, NULL}
#define FileInfo_init_zero                       {NULL, 0, NULL}
#define PreviewImageRequest_init_zero            {NULL, NULL}
#define PreviewImageResponse_init_zero           {_PrepareStatus_MIN, false, _ImageFormat_MIN, false, 0}
#define SensorCaptureRequest_init_zero           {_SensorCaptureRequest_State_MIN, _SensorCaptureRequest_Mode_MIN, false, 0, false, SensorCaptureRequest_MetaInfo_init_zero, false, SensorCaptureRequest_Sensor_List_init_zero, NULL}
#define SensorCaptureRequest_MetaInfo_init_zero  {NULL, _Sex_MIN, 0, 0, 0, NULL, NULL}
#define SensorCaptureRequest_Sensor_init_zero    {0, 0}
#define SensorCaptureRequest_Sensor_List_init_zero {0, NULL}
#define SensorCaptureResponse_init_zero          {0, NULL}
#define SensorConfirmRequest_init_zero           {NULL, 0}
#define SensorConfirmResponse_init_zero          {0}

/* Field tags (for use in manual encoding/decoding) */
#define NfcInfo_key_tag                          1
#define NfcInfo_value_tag                        2
#define NfcInfo_List_list_tag                    1
#define PreviewImageRequest_id_tag               1
#define PreviewImageRequest_name_tag             2
#define SensorCaptureRequest_Sensor_List_list_tag 1
#define FileInfo_name_tag                        1
#define FileInfo_is_append_tag                   2
#define FileInfo_data_tag                        3
#define PreviewImageResponse_status_tag          1
#define PreviewImageResponse_expected_image_format_tag 2
#define PreviewImageResponse_expected_slice_length_tag 3
#define SensorCaptureRequest_MetaInfo_user_id_tag 1
#define SensorCaptureRequest_MetaInfo_sex_tag    2
#define SensorCaptureRequest_MetaInfo_user_age_tag 3
#define SensorCaptureRequest_MetaInfo_height_tag 4
#define SensorCaptureRequest_MetaInfo_weight_tag 5
#define SensorCaptureRequest_MetaInfo_main_scene_tag 6
#define SensorCaptureRequest_MetaInfo_sub_scene_tag 7
#define SensorCaptureRequest_Sensor_type_tag     1
#define SensorCaptureRequest_Sensor_frequence_tag 2
#define SensorCaptureResponse_code_tag           1
#define SensorCaptureResponse_setting_info_tag   2
#define SensorConfirmRequest_data_id_tag         1
#define SensorConfirmRequest_status_tag          2
#define SensorConfirmResponse_result_tag         1
#define SensorCaptureRequest_state_tag           1
#define SensorCaptureRequest_mode_tag            2
#define SensorCaptureRequest_timestamp_tag       3
#define SensorCaptureRequest_meta_info_tag       4
#define SensorCaptureRequest_sensor_list_tag     5
#define SensorCaptureRequest_setting_info_tag    6
#define Factory_mode_tag                         1
#define Factory_nfc_list_tag                     2
#define Factory_file_tag                         3
#define Factory_image_request_tag                4
#define Factory_image_response_tag               5
#define Factory_sensor_capture_request_tag       10
#define Factory_sensor_capture_response_tag      11
#define Factory_sensor_confirm_request_tag       12
#define Factory_sensor_confirm_response_tag      13
#define Factory_attp_tag                         128

/* Struct field encoding specification for nanopb */
extern const pb_field_t Factory_fields[11];
extern const pb_field_t NfcInfo_fields[3];
extern const pb_field_t NfcInfo_List_fields[2];
extern const pb_field_t FileInfo_fields[4];
extern const pb_field_t PreviewImageRequest_fields[3];
extern const pb_field_t PreviewImageResponse_fields[4];
extern const pb_field_t SensorCaptureRequest_fields[7];
extern const pb_field_t SensorCaptureRequest_MetaInfo_fields[8];
extern const pb_field_t SensorCaptureRequest_Sensor_fields[3];
extern const pb_field_t SensorCaptureRequest_Sensor_List_fields[2];
extern const pb_field_t SensorCaptureResponse_fields[3];
extern const pb_field_t SensorConfirmRequest_fields[3];
extern const pb_field_t SensorConfirmResponse_fields[2];

/* Maximum encoded size of messages (where known) */
/* Factory_size depends on runtime parameters */
/* NfcInfo_size depends on runtime parameters */
/* NfcInfo_List_size depends on runtime parameters */
/* FileInfo_size depends on runtime parameters */
/* PreviewImageRequest_size depends on runtime parameters */
#define PreviewImageResponse_size                11
/* SensorCaptureRequest_size depends on runtime parameters */
/* SensorCaptureRequest_MetaInfo_size depends on runtime parameters */
#define SensorCaptureRequest_Sensor_size         12
/* SensorCaptureRequest_Sensor_List_size depends on runtime parameters */
/* SensorCaptureResponse_size depends on runtime parameters */
/* SensorConfirmRequest_size depends on runtime parameters */
#define SensorConfirmResponse_size               6

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define WEAR_FACTORY_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
