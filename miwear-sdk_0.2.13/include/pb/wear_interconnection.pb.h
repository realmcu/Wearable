/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.6 at Fri Jun 10 15:10:20 2022. */

#ifndef PB_WEAR_INTERCONNECTION_PB_H_INCLUDED
#define PB_WEAR_INTERCONNECTION_PB_H_INCLUDED
#include <pb.h>

#include "wear_common.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _DeviceType
{
    DeviceType_ANDROID_PHONE = 1,
    DeviceType_ANDROID_PAD = 2,
    DeviceType_ANDROID_TV = 3,
    DeviceType_WINDOWS_PC = 4,
    DeviceType_SOUNDBOX = 5,
    DeviceType_SOUNDBOX_SCREEN = 6,
    DeviceType_HEADSET = 7
} DeviceType;
#define _DeviceType_MIN DeviceType_ANDROID_PHONE
#define _DeviceType_MAX DeviceType_HEADSET
#define _DeviceType_ARRAYSIZE ((DeviceType)(DeviceType_HEADSET+1))

typedef enum _Interconnection_InterconnectionID
{
    Interconnection_InterconnectionID_REQUEST_PHONE_STATUS = 0,
    Interconnection_InterconnectionID_SYNC_PHONE_STATUS = 1,
    Interconnection_InterconnectionID_REQEUST_SHARE_DEVICES = 2,
    Interconnection_InterconnectionID_SYNC_SHARE_DEVICES = 3,
    Interconnection_InterconnectionID_UPDATE_SHARE_DEVICE = 4,
    Interconnection_InterconnectionID_CONTROL_AUDIO = 5,
    Interconnection_InterconnectionID_CONTROL_TV = 6,
    Interconnection_InterconnectionID_CONTROL_HEADSET = 7,
    Interconnection_InterconnectionID_SEND_CONTROL_RESULT = 8,
    Interconnection_InterconnectionID_REQUEST_PROJECTION_DEVICES = 9,
    Interconnection_InterconnectionID_SYNC_PROJECTION_DEVICES = 10,
    Interconnection_InterconnectionID_REQUEST_PROJECTION = 11,
    Interconnection_InterconnectionID_SEND_PROJECTION_RESPONSE = 12,
    Interconnection_InterconnectionID_REPORT_PROJECTION_DATA = 13
} Interconnection_InterconnectionID;
#define _Interconnection_InterconnectionID_MIN Interconnection_InterconnectionID_REQUEST_PHONE_STATUS
#define _Interconnection_InterconnectionID_MAX Interconnection_InterconnectionID_REPORT_PROJECTION_DATA
#define _Interconnection_InterconnectionID_ARRAYSIZE ((Interconnection_InterconnectionID)(Interconnection_InterconnectionID_REPORT_PROJECTION_DATA+1))

/* Struct definitions */
typedef struct _ProjectionDevice_List
{
    pb_size_t list_count;
    struct _ProjectionDevice *list;
    /* @@protoc_insertion_point(struct:ProjectionDevice_List) */
} ProjectionDevice_List;

typedef struct _ShareDevice_List
{
    pb_size_t list_count;
    struct _ShareDevice *list;
    /* @@protoc_insertion_point(struct:ShareDevice_List) */
} ShareDevice_List;

typedef struct _TVData
{
    char *name;
    /* @@protoc_insertion_point(struct:TVData) */
} TVData;

typedef struct _AudioControl
{
    char *device_id;
    uint8_t cmd;
    bool has_int_value;
    uint16_t int_value;
    char *str_value;
    /* @@protoc_insertion_point(struct:AudioControl) */
} AudioControl;

typedef struct _AudioData
{
    char *name;
    uint16_t current_positon;
    uint16_t duration;
    uint8_t volume;
    char *artist;
    char *album;
    /* @@protoc_insertion_point(struct:AudioData) */
} AudioData;

typedef struct _ControlResult
{
    char *device_id;
    int16_t code;
    /* @@protoc_insertion_point(struct:ControlResult) */
} ControlResult;

typedef struct _HeadsetControl
{
    char *device_id;
    bool has_voice_mode;
    uint8_t voice_mode;
    bool has_multi_connection;
    uint8_t multi_connection;
    /* @@protoc_insertion_point(struct:HeadsetControl) */
} HeadsetControl;

typedef struct _HeadsetInfo
{
    uint8_t voice_mode;
    uint8_t multi_connection;
    /* @@protoc_insertion_point(struct:HeadsetInfo) */
} HeadsetInfo;

typedef struct _PhoneStatus
{
    uint8_t screen;
    /* @@protoc_insertion_point(struct:PhoneStatus) */
} PhoneStatus;

typedef struct _ProjectionData_GroupInfo
{
    uint8_t segment_type;
    uint32_t segment_timestamp;
    uint32_t segment_duration;
    /* @@protoc_insertion_point(struct:ProjectionData_GroupInfo) */
} ProjectionData_GroupInfo;

typedef struct _ProjectionDevice
{
    char *id;
    char *name;
    uint8_t state;
    /* @@protoc_insertion_point(struct:ProjectionDevice) */
} ProjectionDevice;

typedef struct _ProjectionRequest
{
    char *device_id;
    uint8_t cmd;
    /* @@protoc_insertion_point(struct:ProjectionRequest) */
} ProjectionRequest;

typedef struct _ProjectionResponse
{
    char *device_id;
    uint8_t code;
    /* @@protoc_insertion_point(struct:ProjectionResponse) */
} ProjectionResponse;

typedef struct _TVControl
{
    char *device_id;
    uint8_t cmd;
    /* @@protoc_insertion_point(struct:TVControl) */
} TVControl;

typedef struct _TVInfo
{
    uint8_t state;
    bool has_data;
    TVData data;
    /* @@protoc_insertion_point(struct:TVInfo) */
} TVInfo;

typedef struct _AudioInfo
{
    uint8_t state;
    bool has_data;
    AudioData data;
    char *output_id;
    /* @@protoc_insertion_point(struct:AudioInfo) */
} AudioInfo;

typedef struct _ProjectionData
{
    SportType sport_type;
    uint32_t start_time;
    uint32_t duration;
    uint8_t heart_rate;
    uint16_t calories;
    bool has_steps;
    uint32_t steps;
    bool has_distance;
    uint32_t distance;
    bool has_current_pace;
    uint32_t current_pace;
    bool has_speed;
    float speed;
    bool has_jump_count;
    uint32_t jump_count;
    bool has_stumble_count;
    uint16_t stumble_count;
    bool has_group_info;
    ProjectionData_GroupInfo group_info;
    /* @@protoc_insertion_point(struct:ProjectionData) */
} ProjectionData;

typedef struct _ShareDevice
{
    DeviceType type;
    char *id;
    char *name;
    pb_size_t which_info;
    union
    {
        AudioInfo audio_info;
        TVInfo tv_info;
        HeadsetInfo headset_info;
    } info;
    /* @@protoc_insertion_point(struct:ShareDevice) */
} ShareDevice;

typedef struct _Interconnection
{
    pb_size_t which_payload;
    union
    {
        PhoneStatus phone_status;
        ShareDevice_List share_devices;
        ShareDevice share_device;
        AudioControl audio_control;
        TVControl tv_control;
        HeadsetControl headset_control;
        ControlResult control_result;
        ProjectionDevice_List projection_devices;
        ProjectionRequest projection_request;
        ProjectionResponse projection_response;
        ProjectionData projection_data;
    } payload;
    /* @@protoc_insertion_point(struct:Interconnection) */
} Interconnection;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Interconnection_init_default             {0, {PhoneStatus_init_default}}
#define PhoneStatus_init_default                 {0}
#define ShareDevice_init_default                 {_DeviceType_MIN, NULL, NULL, 0, {AudioInfo_init_default}}
#define ShareDevice_List_init_default            {0, NULL}
#define AudioData_init_default                   {NULL, 0, 0, 0, NULL, NULL}
#define AudioInfo_init_default                   {0, false, AudioData_init_default, NULL}
#define TVData_init_default                      {NULL}
#define TVInfo_init_default                      {0, false, TVData_init_default}
#define HeadsetInfo_init_default                 {0, 0}
#define AudioControl_init_default                {NULL, 0, false, 0, NULL}
#define TVControl_init_default                   {NULL, 0}
#define HeadsetControl_init_default              {NULL, false, 0, false, 0}
#define ControlResult_init_default               {NULL, 0}
#define ProjectionDevice_init_default            {NULL, NULL, 0}
#define ProjectionDevice_List_init_default       {0, NULL}
#define ProjectionRequest_init_default           {NULL, 0}
#define ProjectionResponse_init_default          {NULL, 0}
#define ProjectionData_init_default              {_SportType_MIN, 0, 0, 0, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, ProjectionData_GroupInfo_init_default}
#define ProjectionData_GroupInfo_init_default    {0, 0, 0}
#define Interconnection_init_zero                {0, {PhoneStatus_init_zero}}
#define PhoneStatus_init_zero                    {0}
#define ShareDevice_init_zero                    {_DeviceType_MIN, NULL, NULL, 0, {AudioInfo_init_zero}}
#define ShareDevice_List_init_zero               {0, NULL}
#define AudioData_init_zero                      {NULL, 0, 0, 0, NULL, NULL}
#define AudioInfo_init_zero                      {0, false, AudioData_init_zero, NULL}
#define TVData_init_zero                         {NULL}
#define TVInfo_init_zero                         {0, false, TVData_init_zero}
#define HeadsetInfo_init_zero                    {0, 0}
#define AudioControl_init_zero                   {NULL, 0, false, 0, NULL}
#define TVControl_init_zero                      {NULL, 0}
#define HeadsetControl_init_zero                 {NULL, false, 0, false, 0}
#define ControlResult_init_zero                  {NULL, 0}
#define ProjectionDevice_init_zero               {NULL, NULL, 0}
#define ProjectionDevice_List_init_zero          {0, NULL}
#define ProjectionRequest_init_zero              {NULL, 0}
#define ProjectionResponse_init_zero             {NULL, 0}
#define ProjectionData_init_zero                 {_SportType_MIN, 0, 0, 0, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, ProjectionData_GroupInfo_init_zero}
#define ProjectionData_GroupInfo_init_zero       {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ProjectionDevice_List_list_tag           1
#define ShareDevice_List_list_tag                1
#define TVData_name_tag                          1
#define AudioControl_device_id_tag               1
#define AudioControl_cmd_tag                     2
#define AudioControl_int_value_tag               3
#define AudioControl_str_value_tag               4
#define AudioData_name_tag                       1
#define AudioData_current_positon_tag            2
#define AudioData_duration_tag                   3
#define AudioData_volume_tag                     4
#define AudioData_artist_tag                     5
#define AudioData_album_tag                      6
#define ControlResult_device_id_tag              1
#define ControlResult_code_tag                   2
#define HeadsetControl_device_id_tag             1
#define HeadsetControl_voice_mode_tag            2
#define HeadsetControl_multi_connection_tag      3
#define HeadsetInfo_voice_mode_tag               1
#define HeadsetInfo_multi_connection_tag         2
#define PhoneStatus_screen_tag                   1
#define ProjectionData_GroupInfo_segment_type_tag 1
#define ProjectionData_GroupInfo_segment_timestamp_tag 2
#define ProjectionData_GroupInfo_segment_duration_tag 3
#define ProjectionDevice_id_tag                  1
#define ProjectionDevice_name_tag                2
#define ProjectionDevice_state_tag               3
#define ProjectionRequest_device_id_tag          1
#define ProjectionRequest_cmd_tag                2
#define ProjectionResponse_device_id_tag         1
#define ProjectionResponse_code_tag              2
#define TVControl_device_id_tag                  1
#define TVControl_cmd_tag                        2
#define TVInfo_state_tag                         1
#define TVInfo_data_tag                          2
#define AudioInfo_state_tag                      1
#define AudioInfo_data_tag                       2
#define AudioInfo_output_id_tag                  3
#define ProjectionData_sport_type_tag            1
#define ProjectionData_start_time_tag            2
#define ProjectionData_duration_tag              3
#define ProjectionData_heart_rate_tag            4
#define ProjectionData_calories_tag              5
#define ProjectionData_steps_tag                 6
#define ProjectionData_distance_tag              7
#define ProjectionData_current_pace_tag          8
#define ProjectionData_speed_tag                 9
#define ProjectionData_jump_count_tag            10
#define ProjectionData_stumble_count_tag         11
#define ProjectionData_group_info_tag            12
#define ShareDevice_audio_info_tag               4
#define ShareDevice_tv_info_tag                  5
#define ShareDevice_headset_info_tag             6
#define ShareDevice_type_tag                     1
#define ShareDevice_id_tag                       2
#define ShareDevice_name_tag                     3
#define Interconnection_phone_status_tag         1
#define Interconnection_share_devices_tag        2
#define Interconnection_share_device_tag         3
#define Interconnection_audio_control_tag        4
#define Interconnection_tv_control_tag           5
#define Interconnection_headset_control_tag      6
#define Interconnection_control_result_tag       7
#define Interconnection_projection_devices_tag   8
#define Interconnection_projection_request_tag   9
#define Interconnection_projection_response_tag  10
#define Interconnection_projection_data_tag      11

/* Struct field encoding specification for nanopb */
extern const pb_field_t Interconnection_fields[12];
extern const pb_field_t PhoneStatus_fields[2];
extern const pb_field_t ShareDevice_fields[7];
extern const pb_field_t ShareDevice_List_fields[2];
extern const pb_field_t AudioData_fields[7];
extern const pb_field_t AudioInfo_fields[4];
extern const pb_field_t TVData_fields[2];
extern const pb_field_t TVInfo_fields[3];
extern const pb_field_t HeadsetInfo_fields[3];
extern const pb_field_t AudioControl_fields[5];
extern const pb_field_t TVControl_fields[3];
extern const pb_field_t HeadsetControl_fields[4];
extern const pb_field_t ControlResult_fields[3];
extern const pb_field_t ProjectionDevice_fields[4];
extern const pb_field_t ProjectionDevice_List_fields[2];
extern const pb_field_t ProjectionRequest_fields[3];
extern const pb_field_t ProjectionResponse_fields[3];
extern const pb_field_t ProjectionData_fields[13];
extern const pb_field_t ProjectionData_GroupInfo_fields[4];

/* Maximum encoded size of messages (where known) */
/* Interconnection_size depends on runtime parameters */
#define PhoneStatus_size                         6
/* ShareDevice_size depends on runtime parameters */
/* ShareDevice_List_size depends on runtime parameters */
/* AudioData_size depends on runtime parameters */
/* AudioInfo_size depends on runtime parameters */
/* TVData_size depends on runtime parameters */
/* TVInfo_size depends on runtime parameters */
#define HeadsetInfo_size                         12
/* AudioControl_size depends on runtime parameters */
/* TVControl_size depends on runtime parameters */
/* HeadsetControl_size depends on runtime parameters */
/* ControlResult_size depends on runtime parameters */
/* ProjectionDevice_size depends on runtime parameters */
/* ProjectionDevice_List_size depends on runtime parameters */
/* ProjectionRequest_size depends on runtime parameters */
/* ProjectionResponse_size depends on runtime parameters */
#define ProjectionData_size                      82
#define ProjectionData_GroupInfo_size            18

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define WEAR_INTERCONNECTION_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
