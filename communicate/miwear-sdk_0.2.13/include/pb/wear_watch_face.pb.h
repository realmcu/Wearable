/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.6 at Fri Jun 10 15:10:20 2022. */

#ifndef PB_WEAR_WATCH_FACE_PB_H_INCLUDED
#define PB_WEAR_WATCH_FACE_PB_H_INCLUDED
#include <pb.h>

#include "wear_common.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _WatchFace_WatchFaceID
{
    WatchFace_WatchFaceID_GET_INSTALLED_LIST = 0,
    WatchFace_WatchFaceID_SET_WATCH_FACE = 1,
    WatchFace_WatchFaceID_REMOVE_WATCH_FACE = 2,
    WatchFace_WatchFaceID_REMOVE_WATCH_FACE_PHOTO = 3,
    WatchFace_WatchFaceID_PREPARE_INSTALL_WATCH_FACE = 4,
    WatchFace_WatchFaceID_REPORT_INSTALL_RESULT = 5,
    WatchFace_WatchFaceID_REMOVE_MULTI_WATCH_FACE = 6,
    WatchFace_WatchFaceID_GET_SUPPORT_DATA = 10,
    WatchFace_WatchFaceID_EDIT_WATCH_FACE = 11,
    WatchFace_WatchFaceID_BG_IMAGE_RESULT = 12
} WatchFace_WatchFaceID;
#define _WatchFace_WatchFaceID_MIN WatchFace_WatchFaceID_GET_INSTALLED_LIST
#define _WatchFace_WatchFaceID_MAX WatchFace_WatchFaceID_BG_IMAGE_RESULT
#define _WatchFace_WatchFaceID_ARRAYSIZE ((WatchFace_WatchFaceID)(WatchFace_WatchFaceID_BG_IMAGE_RESULT+1))

typedef enum _WatchFaceSlot_Data
{
    WatchFaceSlot_Data_EMPTY = 0,
    WatchFaceSlot_Data_HEART_RATE = 1,
    WatchFaceSlot_Data_PRESSURE = 2,
    WatchFaceSlot_Data_SLEEP = 3,
    WatchFaceSlot_Data_ENERGY = 4,
    WatchFaceSlot_Data_STEP = 5,
    WatchFaceSlot_Data_CALORIE = 6,
    WatchFaceSlot_Data_VALID_STAND = 7,
    WatchFaceSlot_Data_BATTERY = 8,
    WatchFaceSlot_Data_DATE = 9,
    WatchFaceSlot_Data_WEATHER = 10,
    WatchFaceSlot_Data_AIR_PRESSURE = 11,
    WatchFaceSlot_Data_ALTITUDE = 12,
    WatchFaceSlot_Data_TIMER = 13,
    WatchFaceSlot_Data_CLOCK = 14,
    WatchFaceSlot_Data_AQI = 15,
    WatchFaceSlot_Data_HUMIDITY = 16,
    WatchFaceSlot_Data_SPORT_MODE = 17,
    WatchFaceSlot_Data_UVI = 18,
    WatchFaceSlot_Data_SUNRISE_SUNSET = 19,
    WatchFaceSlot_Data_WIND_DIRECTION = 20
} WatchFaceSlot_Data;
#define _WatchFaceSlot_Data_MIN WatchFaceSlot_Data_EMPTY
#define _WatchFaceSlot_Data_MAX WatchFaceSlot_Data_WIND_DIRECTION
#define _WatchFaceSlot_Data_ARRAYSIZE ((WatchFaceSlot_Data)(WatchFaceSlot_Data_WIND_DIRECTION+1))

typedef enum _InstallResult_Code
{
    InstallResult_Code_VERIFY_FAILED = 0,
    InstallResult_Code_INSTALL_FAILED = 1,
    InstallResult_Code_INSTALL_SUCCESS = 2,
    InstallResult_Code_INSTALL_USED = 3
} InstallResult_Code;
#define _InstallResult_Code_MIN InstallResult_Code_VERIFY_FAILED
#define _InstallResult_Code_MAX InstallResult_Code_INSTALL_USED
#define _InstallResult_Code_ARRAYSIZE ((InstallResult_Code)(InstallResult_Code_INSTALL_USED+1))

typedef enum _EditResponse_Code
{
    EditResponse_Code_SUCCESS = 0,
    EditResponse_Code_SUCCESS_BUT_LOW_STORAGE = 1,
    EditResponse_Code_FAIL_FOR_LOW_STORAGE = 2,
    EditResponse_Code_FAIL_FOR_INVALID_PARAM = 3,
    EditResponse_Code_FAIL = 4
} EditResponse_Code;
#define _EditResponse_Code_MIN EditResponse_Code_SUCCESS
#define _EditResponse_Code_MAX EditResponse_Code_FAIL
#define _EditResponse_Code_ARRAYSIZE ((EditResponse_Code)(EditResponse_Code_FAIL+1))

typedef enum _BgImageResult_Code
{
    BgImageResult_Code_SUCCESS = 0,
    BgImageResult_Code_IMAGE_SAVE_FAILED = 1,
    BgImageResult_Code_IMAGE_RESOLVE_FAILED = 2,
    BgImageResult_Code_NO_WATCH_FACE_MATCHED = 3
} BgImageResult_Code;
#define _BgImageResult_Code_MIN BgImageResult_Code_SUCCESS
#define _BgImageResult_Code_MAX BgImageResult_Code_NO_WATCH_FACE_MATCHED
#define _BgImageResult_Code_ARRAYSIZE ((BgImageResult_Code)(BgImageResult_Code_NO_WATCH_FACE_MATCHED+1))

/* Struct definitions */
typedef struct _WatchFaceInfo
{
    char *id;
    /* @@protoc_insertion_point(struct:WatchFaceInfo) */
} WatchFaceInfo;

typedef struct _WatchFaceInfo_List
{
    pb_size_t list_count;
    struct _WatchFaceInfo *list;
    /* @@protoc_insertion_point(struct:WatchFaceInfo_List) */
} WatchFaceInfo_List;

typedef struct _WatchFaceItem_List
{
    pb_size_t list_count;
    struct _WatchFaceItem *list;
    /* @@protoc_insertion_point(struct:WatchFaceItem_List) */
} WatchFaceItem_List;

typedef struct _WatchFaceSlot
{
    char dummy_field;
    /* @@protoc_insertion_point(struct:WatchFaceSlot) */
} WatchFaceSlot;

typedef struct _WatchFaceSlot_Item
{
    char *slot_id;
    char *widget_id;
    /* @@protoc_insertion_point(struct:WatchFaceSlot_Item) */
} WatchFaceSlot_Item;

typedef struct _WatchFaceSlot_List
{
    pb_size_t list_count;
    WatchFaceSlot_Data *list;
    /* @@protoc_insertion_point(struct:WatchFaceSlot_List) */
} WatchFaceSlot_List;

typedef struct _BgImageResult
{
    BgImageResult_Code code;
    char *id;
    char *background_image;
    /* @@protoc_insertion_point(struct:BgImageResult) */
} BgImageResult;

typedef struct _EditRequest
{
    char *id;
    bool set_current;
    char *background_color;
    char *background_image;
    bool has_background_image_size;
    uint32_t background_image_size;
    char *style;
    pb_size_t data_list_count;
    WatchFaceSlot_Data *data_list;
    pb_size_t background_image_list_count;
    char **background_image_list;
    pb_size_t background_image_size_list_count;
    uint32_t *background_image_size_list;
    pb_size_t order_image_list_count;
    char **order_image_list;
    bool has_delete_all_images;
    bool delete_all_images;
    pb_size_t slot_item_list_count;
    struct _WatchFaceSlot_Item *slot_item_list;
    /* @@protoc_insertion_point(struct:EditRequest) */
} EditRequest;

typedef struct _EditResponse
{
    char *id;
    EditResponse_Code code;
    bool has_can_accept_image_count;
    uint8_t can_accept_image_count;
    bool has_expected_slice_length;
    uint32_t expected_slice_length;
    /* @@protoc_insertion_point(struct:EditResponse) */
} EditResponse;

typedef struct _InstallResult
{
    char *id;
    InstallResult_Code code;
    bool has_support_edit;
    bool support_edit;
    bool has_support_image_format;
    ImageFormat support_image_format;
    /* @@protoc_insertion_point(struct:InstallResult) */
} InstallResult;

typedef struct _PrepareInfo
{
    char *id;
    uint32_t size;
    bool has_version_code;
    uint64_t version_code;
    bool has_support_compress_mode;
    uint8_t support_compress_mode;
    /* @@protoc_insertion_point(struct:PrepareInfo) */
} PrepareInfo;

typedef struct _PrepareReply
{
    char *id;
    PrepareStatus prepare_status;
    bool has_select_compress_mode;
    uint8_t select_compress_mode;
    bool has_expected_slice_length;
    uint32_t expected_slice_length;
    /* @@protoc_insertion_point(struct:PrepareReply) */
} PrepareReply;

typedef struct _WatchFaceItem
{
    char *id;
    char *name;
    bool is_current;
    bool has_can_remove;
    bool can_remove;
    bool has_version_code;
    uint64_t version_code;
    bool has_can_edit;
    bool can_edit;
    char *background_color;
    char *background_image;
    char *style;
    pb_size_t data_list_count;
    WatchFaceSlot_Data *data_list;
    bool has_support_image_format;
    ImageFormat support_image_format;
    pb_size_t background_image_list_count;
    char **background_image_list;
    pb_size_t slot_item_list_count;
    struct _WatchFaceSlot_Item *slot_item_list;
    /* @@protoc_insertion_point(struct:WatchFaceItem) */
} WatchFaceItem;

typedef struct _WatchFace
{
    pb_size_t which_payload;
    union
    {
        WatchFaceItem_List watch_face_list;
        char *id;
        char *path;
        bool success;
        PrepareStatus prepare_status;
        PrepareInfo prepare_info;
        InstallResult install_result;
        WatchFaceInfo_List info_list;
        PrepareReply prepare_reply;
        WatchFaceSlot_List support_data_list;
        EditRequest edit_request;
        EditResponse edit_response;
        BgImageResult bg_image_result;
    } payload;
    /* @@protoc_insertion_point(struct:WatchFace) */
} WatchFace;

/* Default values for struct fields */

/* Initializer values for message structs */
#define WatchFace_init_default                   {0, {WatchFaceItem_List_init_default}}
#define WatchFaceSlot_init_default               {0}
#define WatchFaceSlot_List_init_default          {0, NULL}
#define WatchFaceSlot_Item_init_default          {NULL, NULL}
#define WatchFaceItem_init_default               {NULL, NULL, 0, false, 0, false, 0, false, 0, NULL, NULL, NULL, 0, NULL, false, _ImageFormat_MIN, 0, NULL, 0, NULL}
#define WatchFaceItem_List_init_default          {0, NULL}
#define WatchFaceInfo_init_default               {NULL}
#define WatchFaceInfo_List_init_default          {0, NULL}
#define PrepareInfo_init_default                 {NULL, 0, false, 0, false, 0}
#define PrepareReply_init_default                {NULL, _PrepareStatus_MIN, false, 0, false, 0}
#define InstallResult_init_default               {NULL, _InstallResult_Code_MIN, false, 0, false, _ImageFormat_MIN}
#define EditRequest_init_default                 {NULL, 0, NULL, NULL, false, 0, NULL, 0, NULL, 0, NULL, 0, NULL, 0, NULL, false, 0, 0, NULL}
#define EditResponse_init_default                {NULL, _EditResponse_Code_MIN, false, 0, false, 0}
#define BgImageResult_init_default               {_BgImageResult_Code_MIN, NULL, NULL}
#define WatchFace_init_zero                      {0, {WatchFaceItem_List_init_zero}}
#define WatchFaceSlot_init_zero                  {0}
#define WatchFaceSlot_List_init_zero             {0, NULL}
#define WatchFaceSlot_Item_init_zero             {NULL, NULL}
#define WatchFaceItem_init_zero                  {NULL, NULL, 0, false, 0, false, 0, false, 0, NULL, NULL, NULL, 0, NULL, false, _ImageFormat_MIN, 0, NULL, 0, NULL}
#define WatchFaceItem_List_init_zero             {0, NULL}
#define WatchFaceInfo_init_zero                  {NULL}
#define WatchFaceInfo_List_init_zero             {0, NULL}
#define PrepareInfo_init_zero                    {NULL, 0, false, 0, false, 0}
#define PrepareReply_init_zero                   {NULL, _PrepareStatus_MIN, false, 0, false, 0}
#define InstallResult_init_zero                  {NULL, _InstallResult_Code_MIN, false, 0, false, _ImageFormat_MIN}
#define EditRequest_init_zero                    {NULL, 0, NULL, NULL, false, 0, NULL, 0, NULL, 0, NULL, 0, NULL, 0, NULL, false, 0, 0, NULL}
#define EditResponse_init_zero                   {NULL, _EditResponse_Code_MIN, false, 0, false, 0}
#define BgImageResult_init_zero                  {_BgImageResult_Code_MIN, NULL, NULL}

/* Field tags (for use in manual encoding/decoding) */
#define WatchFaceInfo_id_tag                     1
#define WatchFaceInfo_List_list_tag              1
#define WatchFaceItem_List_list_tag              1
#define WatchFaceSlot_Item_slot_id_tag           1
#define WatchFaceSlot_Item_widget_id_tag         2
#define WatchFaceSlot_List_list_tag              1
#define BgImageResult_code_tag                   1
#define BgImageResult_id_tag                     2
#define BgImageResult_background_image_tag       3
#define EditRequest_id_tag                       1
#define EditRequest_set_current_tag              2
#define EditRequest_background_color_tag         3
#define EditRequest_background_image_tag         4
#define EditRequest_background_image_size_tag    5
#define EditRequest_style_tag                    6
#define EditRequest_data_list_tag                7
#define EditRequest_background_image_list_tag    8
#define EditRequest_background_image_size_list_tag 9
#define EditRequest_order_image_list_tag         10
#define EditRequest_delete_all_images_tag        11
#define EditRequest_slot_item_list_tag           12
#define EditResponse_id_tag                      1
#define EditResponse_code_tag                    2
#define EditResponse_can_accept_image_count_tag  3
#define EditResponse_expected_slice_length_tag   4
#define InstallResult_id_tag                     1
#define InstallResult_code_tag                   2
#define InstallResult_support_edit_tag           3
#define InstallResult_support_image_format_tag   4
#define PrepareInfo_id_tag                       1
#define PrepareInfo_size_tag                     2
#define PrepareInfo_version_code_tag             3
#define PrepareInfo_support_compress_mode_tag    4
#define PrepareReply_id_tag                      1
#define PrepareReply_prepare_status_tag          2
#define PrepareReply_select_compress_mode_tag    3
#define PrepareReply_expected_slice_length_tag   4
#define WatchFaceItem_id_tag                     1
#define WatchFaceItem_name_tag                   2
#define WatchFaceItem_is_current_tag             3
#define WatchFaceItem_can_remove_tag             4
#define WatchFaceItem_version_code_tag           5
#define WatchFaceItem_can_edit_tag               6
#define WatchFaceItem_background_color_tag       7
#define WatchFaceItem_background_image_tag       8
#define WatchFaceItem_style_tag                  9
#define WatchFaceItem_data_list_tag              10
#define WatchFaceItem_support_image_format_tag   11
#define WatchFaceItem_background_image_list_tag  12
#define WatchFaceItem_slot_item_list_tag         13
#define WatchFace_watch_face_list_tag            1
#define WatchFace_id_tag                         2
#define WatchFace_path_tag                       3
#define WatchFace_success_tag                    4
#define WatchFace_prepare_status_tag             5
#define WatchFace_prepare_info_tag               6
#define WatchFace_install_result_tag             7
#define WatchFace_info_list_tag                  8
#define WatchFace_prepare_reply_tag              9
#define WatchFace_support_data_list_tag          11
#define WatchFace_edit_request_tag               12
#define WatchFace_edit_response_tag              13
#define WatchFace_bg_image_result_tag            14

/* Struct field encoding specification for nanopb */
extern const pb_field_t WatchFace_fields[14];
extern const pb_field_t WatchFaceSlot_fields[1];
extern const pb_field_t WatchFaceSlot_List_fields[2];
extern const pb_field_t WatchFaceSlot_Item_fields[3];
extern const pb_field_t WatchFaceItem_fields[14];
extern const pb_field_t WatchFaceItem_List_fields[2];
extern const pb_field_t WatchFaceInfo_fields[2];
extern const pb_field_t WatchFaceInfo_List_fields[2];
extern const pb_field_t PrepareInfo_fields[5];
extern const pb_field_t PrepareReply_fields[5];
extern const pb_field_t InstallResult_fields[5];
extern const pb_field_t EditRequest_fields[13];
extern const pb_field_t EditResponse_fields[5];
extern const pb_field_t BgImageResult_fields[4];

/* Maximum encoded size of messages (where known) */
/* WatchFace_size depends on runtime parameters */
#define WatchFaceSlot_size                       0
/* WatchFaceSlot_List_size depends on runtime parameters */
/* WatchFaceSlot_Item_size depends on runtime parameters */
/* WatchFaceItem_size depends on runtime parameters */
/* WatchFaceItem_List_size depends on runtime parameters */
/* WatchFaceInfo_size depends on runtime parameters */
/* WatchFaceInfo_List_size depends on runtime parameters */
/* PrepareInfo_size depends on runtime parameters */
/* PrepareReply_size depends on runtime parameters */
/* InstallResult_size depends on runtime parameters */
/* EditRequest_size depends on runtime parameters */
/* EditResponse_size depends on runtime parameters */
/* BgImageResult_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define WEAR_WATCH_FACE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
