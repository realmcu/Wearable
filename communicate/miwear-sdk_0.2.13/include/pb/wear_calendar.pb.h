/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.6 at Fri Jun 10 15:10:20 2022. */

#ifndef PB_WEAR_CALENDAR_PB_H_INCLUDED
#define PB_WEAR_CALENDAR_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Calendar_CalendarID
{
    Calendar_CalendarID_SYNC_CALENDAR_INFO = 0,
    Calendar_CalendarID_SYNC_CALENDAR_INFO_LIST = 1,
    Calendar_CalendarID_WEAR_REQUEST = 2
} Calendar_CalendarID;
#define _Calendar_CalendarID_MIN Calendar_CalendarID_SYNC_CALENDAR_INFO
#define _Calendar_CalendarID_MAX Calendar_CalendarID_WEAR_REQUEST
#define _Calendar_CalendarID_ARRAYSIZE ((Calendar_CalendarID)(Calendar_CalendarID_WEAR_REQUEST+1))

/* Struct definitions */
typedef struct _CalendarInfo
{
    char *title;
    char *description;
    char *location;
    uint32_t start;
    uint32_t end;
    bool all_day;
    int32_t reminder_minutes;
    /* @@protoc_insertion_point(struct:CalendarInfo) */
} CalendarInfo;

typedef struct _CalendarInfo_List
{
    pb_size_t list_count;
    struct _CalendarInfo *list;
    bool has_disable;
    bool disable;
    /* @@protoc_insertion_point(struct:CalendarInfo_List) */
} CalendarInfo_List;

typedef struct _Calendar
{
    pb_size_t which_payload;
    union
    {
        CalendarInfo calendar_info;
        CalendarInfo_List calendar_info_list;
    } payload;
    /* @@protoc_insertion_point(struct:Calendar) */
} Calendar;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Calendar_init_default                    {0, {CalendarInfo_init_default}}
#define CalendarInfo_init_default                {NULL, NULL, NULL, 0, 0, 0, 0}
#define CalendarInfo_List_init_default           {0, NULL, false, 0}
#define Calendar_init_zero                       {0, {CalendarInfo_init_zero}}
#define CalendarInfo_init_zero                   {NULL, NULL, NULL, 0, 0, 0, 0}
#define CalendarInfo_List_init_zero              {0, NULL, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CalendarInfo_title_tag                   1
#define CalendarInfo_description_tag             2
#define CalendarInfo_location_tag                3
#define CalendarInfo_start_tag                   4
#define CalendarInfo_end_tag                     5
#define CalendarInfo_all_day_tag                 6
#define CalendarInfo_reminder_minutes_tag        7
#define CalendarInfo_List_list_tag               1
#define CalendarInfo_List_disable_tag            2
#define Calendar_calendar_info_tag               1
#define Calendar_calendar_info_list_tag          2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Calendar_fields[3];
extern const pb_field_t CalendarInfo_fields[8];
extern const pb_field_t CalendarInfo_List_fields[3];

/* Maximum encoded size of messages (where known) */
/* Calendar_size depends on runtime parameters */
/* CalendarInfo_size depends on runtime parameters */
/* CalendarInfo_List_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define WEAR_CALENDAR_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
