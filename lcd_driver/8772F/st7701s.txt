    write_command(0xFF);//0711
    write_data(0x77);
    write_data(0x01);
    write_data(0x00);
    write_data(0x00);
    write_data(0x13);

    write_command(0xE8);//0711
    write_data(0x00);
    write_data(0x0E);

    write_command(0xFF);//0711
    write_data(0x77);
    write_data(0x01);
    write_data(0x00);
    write_data(0x00);
    write_data(0x00);

    write_command(0x11);
      rt_thread_mdelay(120);
     //PAGE3
    write_command(0xFF);//0711
    write_data(0x77);
    write_data(0x01);
    write_data(0x00);
    write_data(0x00);
    write_data(0x13);

    write_command(0xE8);//0711
    write_data(0x00);
    write_data(0x0C);

    write_command(0xE8);//0711
    write_data(0x00);
    write_data(0x00);
    write_command(0xFF);
     //PAGE01
    write_data(0x77);//0711
    write_data(0x01);
    write_data(0x00);
    write_data(0x00);
    write_data(0x00);

    write_command(0xFF);
    write_data(0x77);
    write_data(0x01);
    write_data(0x00);
    write_data(0x00);
    write_data(0x10);

    write_command(0xC0); //Display Line Setting  
    write_data(0x4F);
    write_data(0x00);

    write_command(0xC1);//Porch Control 
    write_data(0x07);
    write_data(0x02);

    write_command(0xC2);// Inversion set 
    write_data(0x37);//31 2-DOT 37-Column
    write_data(0x05);

    write_command(0xC3); //SET RGB MODE
    write_data(0x03); //00-DE MODE ,80-HV MODE 03-PCLK N
    write_data(0x00);
    write_data(0x00);

    //write_command(0xC7);  //X-direction Control   
    //write_data(0x00); //00-S0-479,04,S479-0 

    write_command(0xC6);
    write_data(0x01);

    write_command(0xCC); 
    write_data(0x38); 

    write_command(0xB0); //Positive Voltage Gamma Control 
    write_data(0x00);
    write_data(0x0A);
    write_data(0x11);
    write_data(0x0C);
    write_data(0x10);
    write_data(0x05);
    write_data(0x00);
    write_data(0x08);
    write_data(0x08);
    write_data(0x1F);
    write_data(0x07);
    write_data(0x13);
    write_data(0x10);
    write_data(0xA9);
    write_data(0x30);
    write_data(0x18);

    write_command(0xB1);  //Negative Voltage Gamma Control   
    write_data(0x00);
    write_data(0x0B);
    write_data(0x11);
    write_data(0x0D);
    write_data(0x0F);
    write_data(0x05);
    write_data(0x02);
    write_data(0x07);
    write_data(0x06);
    write_data(0x20);
    write_data(0x05);
    write_data(0x15);
    write_data(0x13);
    write_data(0xA9);
    write_data(0x30);
    write_data(0x18);
      //*******power set********//
    //PAGE2
    write_command(0xFF);
    write_data(0x77);
    write_data(0x01);
    write_data(0x00);
    write_data(0x00);
    write_data(0x11);

    write_command(0xB0);//Vop Amplitude setting 
    write_data(0x53);

    write_command(0xB1); //VCOM amplitude setting  
    write_data(0x5A);//VCOM

    write_command(0xB2); //VGH Voltage setting   
    write_data(0x87);//0711

    write_command(0xB3);//TEST Command Setting 
    write_data(0x80);

    write_command(0xB5); //VGL Voltage setting     
    write_data(0x49);

    write_command(0xB7);  //Power Control 1 
    write_data(0x85);  

    write_command(0xB8); //Power Control 2  
    write_data(0x21); //AVDD=6.6 & AVCL=-4.6 

    write_command(0xC1);  //Source pre_drive timing set1 
    write_data(0x78);

    write_command(0xC2); //Source EQ2 Setting 
    write_data(0x78);
    //*********GIP SET*************//
    write_command(0xE0);
    write_data(0x00);
    write_data(0x00);
    write_data(0x02);

    write_command(0xE1);
    write_data(0x03);
    write_data(0xA0);
    write_data(0x00);
    write_data(0x00);
    write_data(0x02);
    write_data(0xA0);
    write_data(0x00);
    write_data(0x00);
    write_data(0x00);
    write_data(0x33);
    write_data(0x33);

    write_command(0xE2);
    write_data(0x22);
    write_data(0x22);
    write_data(0x33);
    write_data(0x33);
    write_data(0x88);
    write_data(0xA0);
    write_data(0x00);
    write_data(0x00);
    write_data(0x87);
    write_data(0xA0);
    write_data(0x00);
    write_data(0x00);

    write_command(0xE3);
    write_data(0x00);
    write_data(0x00);
    write_data(0x22);
    write_data(0x22);

    write_command(0xE4);
    write_data(0x44);
    write_data(0x44);

    write_command(0xE5);
    write_data(0x04);
    write_data(0x84);
    write_data(0xA0);
    write_data(0xA0);
    write_data(0x06);
    write_data(0x86);
    write_data(0xA0);
    write_data(0xA0);
    write_data(0x08);
    write_data(0x88);
    write_data(0xA0);
    write_data(0xA0);
    write_data(0x0A);
    write_data(0x8A);
    write_data(0xA0);
    write_data(0xA0);

    write_command(0xE6);
    write_data(0x00);
    write_data(0x00);
    write_data(0x22);
    write_data(0x22);

    write_command(0xE7);
    write_data(0x44);
    write_data(0x44);

    write_command(0xE8);
    write_data(0x03);
    write_data(0x83);
    write_data(0xA0);
    write_data(0xA0);
    write_data(0x05);
    write_data(0x85);
    write_data(0xA0);
    write_data(0xA0);
    write_data(0x07);
    write_data(0x87);
    write_data(0xA0);
    write_data(0xA0);
    write_data(0x09);
    write_data(0x89);
    write_data(0xA0);
    write_data(0xA0);

    write_command(0xEB);
    write_data(0x00);
    write_data(0x01);
    write_data(0xE4);
    write_data(0xE4);
    write_data(0x88);
    write_data(0x00);
    write_data(0x40);

    write_command(0xEC);
    write_data(0x3C);
    write_data(0x01);

    write_command(0xED);
    write_data(0xAB);
    write_data(0x89);
    write_data(0x76);
    write_data(0x54);
    write_data(0x02);
    write_data(0xFF);
    write_data(0xFF);
    write_data(0xFF);
    write_data(0xFF);
    write_data(0xFF);
    write_data(0xFF);
    write_data(0x20);
    write_data(0x45);
    write_data(0x67);
    write_data(0x98);
    write_data(0xBA);

    write_command(0xEF);
    write_data(0x08);
    write_data(0x08);
    write_data(0x08);
    write_data(0x08);
    write_data(0x3F);
    write_data(0x1F);

    write_command(0xFF);
    write_data(0x77);
    write_data(0x01);
    write_data(0x00);
    write_data(0x00);
    write_data(0x00);

    write_command(0x36);  //Display data access control
    write_data(0x00); //10-180??00??

    //write_command(0x0C); 
    //write_data(0x50); //RGB565
    write_command(0x3A); 
    //write_data(0x70); //RGB888
    write_data(0x50); //RGB565

    write_command(0x29);

#if 0
//------------------Bist Mode-----------------------------------


//360x640

write_command( 0xFF); 

//System Function Command Table2   


write_data( 0x77);

write_data( 0x01);   

write_data( 0x00);

write_data( 0x00);   

write_data( 0x12); 


write_command( 0xD1); 

write_data( 0x82);

write_data( 0x07);   

write_data( 0x02);

write_data( 0x80);   

write_data( 0x06);

write_data( 0x02);

write_data( 0x3C);

write_data( 0x01);

write_data( 0xE0);

write_data( 0x60);

write_data( 0x01);

write_data( 0xE0);

write_data( 0x02);

write_data( 0x80);        


write_command( 0xD2); 

write_data( 0x08);

//Color Bar
write_data( 0xFF);
#endif
